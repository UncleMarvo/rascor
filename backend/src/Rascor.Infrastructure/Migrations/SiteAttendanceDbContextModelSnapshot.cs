// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rascor.Infrastructure.Data;

#nullable disable

namespace Rascor.Infrastructure.Migrations
{
    [DbContext(typeof(RascorDbContext))]
    partial class RascorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rascor.Domain.GeofenceEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("id");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("event_type");

                    b.Property<double?>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("site_id");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("Timestamp");

                    b.HasIndex("UserId");

                    b.ToTable("geofence_events", (string)null);
                });

            modelBuilder.Entity("Rascor.Domain.Site", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("id");

                    b.Property<double>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<int>("RadiusMeters")
                        .HasColumnType("integer")
                        .HasColumnName("radius_meters");

                    b.HasKey("Id");

                    b.ToTable("sites", (string)null);
                });

            modelBuilder.Entity("Rascor.Domain.UserAssignment", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("user_id");

                    b.Property<string>("SiteId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("site_id");

                    b.Property<DateTimeOffset>("AssignedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("assigned_at");

                    b.HasKey("UserId", "SiteId");

                    b.ToTable("assignments", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
